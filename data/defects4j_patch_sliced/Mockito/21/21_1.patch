--- a/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
+++ b/src/org/mockito/internal/creation/instance/ConstructorInstantiator.java
@@ -14,18 +14,23 @@ public class ConstructorInstantiator implements Instantiator {
         if (outerClassInstance == null) {
             return noArgConstructor(cls);
         }
-        return withOuterClass(cls);
+        return withParams(cls, outerClassInstance);
     }
 
-    private <T> T withOuterClass(Class<T> cls) {
+    private static <T> T withParams(Class<T> cls, Object... params) {
         try {
             //this is kind of overengineered because we don't need to support more params
             //however, I know we will be needing it :)
-            Constructor<T> c = cls.getDeclaredConstructor(outerClassInstance.getClass());
-            return c.newInstance(outerClassInstance);
+            for (Constructor<?> constructor : cls.getDeclaredConstructors()) {
+                Class<?>[] types = constructor.getParameterTypes();
+                if (paramsMatch(types, params)) {
+                    return (T) constructor.newInstance(params);
+                }
+            }
         } catch (Exception e) {
             throw paramsException(cls, e);
         }
+        throw paramsException(cls, null);
     }
 
     private static <T> InstantationException paramsException(Class<T> cls, Exception e) {
