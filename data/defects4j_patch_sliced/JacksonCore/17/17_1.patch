--- a/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
+++ b/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
@@ -525,17 +525,33 @@ public class UTF8JsonGenerator
         final char[] buf = _charBuffer;
 
         // minor optimization: see if we can just get and copy
+        if (len <= buf.length) {
+            text.getChars(offset, offset+len, buf, 0);
+            _writeRawSegment(buf, 0, len);
+            return;
+        }
 
         // If not, need segmented approach. For speed, let's also use input buffer
         // size that is guaranteed to fit in output buffer; each char can expand to
         // at most 3 bytes, so at most 1/3 of buffer size.
+        final int maxChunk = (_outputEnd >> 2) + (_outputEnd >> 4); // == (1/4 + 1/16) == 5/16
+        final int maxBytes = maxChunk * 3;
 
         while (len > 0) {
-            int len2 = Math.min(buf.length, len);
+            int len2 = Math.min(maxChunk, len);
             text.getChars(offset, offset+len2, buf, 0);
-            writeRaw(buf, 0, len2);
+            if ((_outputTail + maxBytes) > _outputEnd) {
+                _flushBuffer();
+            }
             // If this is NOT the last segment and if the last character looks like
             // split surrogate second half, drop it
+            if (len > 0) {
+                char ch = buf[len2-1];
+                if ((ch >= SURR1_FIRST) && (ch <= SURR1_LAST)) {
+                    --len2;
+                }
+            }
+            _writeRawSegment(buf, 0, len2);
             offset += len2;
             len -= len2;
         }
