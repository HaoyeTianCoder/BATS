--- a/src/main/java/org/jsoup/safety/Cleaner.java
+++ b/src/main/java/org/jsoup/safety/Cleaner.java
@@ -81,20 +89,31 @@ public class Cleaner {
                     destination.appendChild(destChild);
 
                     numDiscarded += meta.numAttribsDiscarded;
-                    numDiscarded += copySafeNodes(sourceEl, destChild);
-                } else {
+                    destination = destChild;
+                } else if (source != root) { // not a safe tag, so don't add. don't count root against discarded.
                     numDiscarded++;
-                    numDiscarded += copySafeNodes(sourceEl, destination);
                 }
             } else if (source instanceof TextNode) {
                 TextNode sourceText = (TextNode) source;
                 TextNode destText = new TextNode(sourceText.getWholeText(), source.baseUri());
                 destination.appendChild(destText);
+            } else { // else, we don't care about comments, xml proc instructions, etc
+                numDiscarded++;
             }
         }
-        return numDiscarded;
 
+        public void tail(Node source, int depth) {
+            if (source instanceof Element && whitelist.isSafeTag(source.nodeName())) {
+                destination = destination.parent(); // would have descended, so pop destination stack
+            }
+        }
+    }
 
+    private int copySafeNodes(Element source, Element dest) {
+        CleaningVisitor cleaningVisitor = new CleaningVisitor(source, dest);
+        NodeTraversor traversor = new NodeTraversor(cleaningVisitor);
+        traversor.traverse(source);
+        return cleaningVisitor.numDiscarded;
     }
 
     private ElementMeta createSafeElement(Element sourceEl) {
