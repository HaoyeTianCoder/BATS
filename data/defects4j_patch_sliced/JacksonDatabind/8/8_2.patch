--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java
@@ -287,17 +288,27 @@ public class CreatorCollector
                     return;
                 }
                 // both explicit: verify
+                verify = true;
+            } else {
                 // otherwise only verify if neither explicitly annotated.
+                verify = !explicit;
             }
 
             // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
+            if (verify && (oldOne.getClass() == newOne.getClass())) {
                 // [databind#667]: avoid one particular class of bogus problems
+                Class<?> oldType = oldOne.getRawParameterType(0);
+                Class<?> newType = newOne.getRawParameterType(0);
 
+                if (oldType == newType) {
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                             +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
                 // otherwise, which one to choose?
+                if (newType.isAssignableFrom(oldType)) {
                     // new type more generic, use old
+                    return;
+                }
                 // new type more specific, use it
             }
         }
