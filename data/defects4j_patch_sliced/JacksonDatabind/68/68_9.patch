--- a/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java
@@ -1332,30 +1338,15 @@ public abstract class BeanDeserializerBase
     public Object deserializeFromArray(JsonParser p, DeserializationContext ctxt) throws IOException
     {
         // note: can not call `_delegateDeserializer()` since order reversed here:
-        if (_arrayDelegateDeserializer != null) {
-            try {
-                Object bean = _valueInstantiator.createUsingArrayDelegate(ctxt, _arrayDelegateDeserializer.deserialize(p, ctxt));
-                if (_injectables != null) {
-                    injectValues(ctxt, bean);
-                }
-                return bean;
-            } catch (Exception e) {
-                return wrapInstantiationProblem(e, ctxt);
-            }
-        }
+        JsonDeserializer<Object> delegateDeser = _arrayDelegateDeserializer;
         // fallback to non-array delegate
-        if (_delegateDeserializer != null) {
-            try {
+        if ((delegateDeser != null) || ((delegateDeser = _delegateDeserializer) != null)) {
             Object bean = _valueInstantiator.createUsingArrayDelegate(ctxt,
-                    _delegateDeserializer.deserialize(p, ctxt));
+                    delegateDeser.deserialize(p, ctxt));
             if (_injectables != null) {
                 injectValues(ctxt, bean);
             }
             return bean;
-            } catch (Exception e) {
-                wrapInstantiationProblem(e, ctxt);
-                return null;
-            }
         }
         if (ctxt.isEnabled(DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS)) {
             JsonToken t = p.nextToken();
