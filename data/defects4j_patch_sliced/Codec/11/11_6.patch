--- a/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
+++ b/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java
@@ -172,31 +195,46 @@ public class QuotedPrintableCodec implements BinaryEncoder, BinaryDecoder, Strin
             printable = PRINTABLE_CHARS;
         }
         ByteArrayOutputStream buffer = new ByteArrayOutputStream();
+        int pos = 1;
         // encode up to buffer.length - 3, the last three octets will be treated
         // separately for simplification of note #3
+        for (int i = 0; i < bytes.length - 3; i++) {
+            int b = getUnsignedOctet(i, bytes);
+            if (pos < SAFE_LENGTH) {
                 // up to this length it is safe to add any byte, encoded or not
-        for (byte c : bytes) {
-            int b = c;
-            if (b < 0) {
-                b = 256 + b;
-            }
-            if (printable.get(b)) {
-                buffer.write(b);
+                pos += encodeByte(b, !printable.get(b), buffer);
             } else {
                 // rule #3: whitespace at the end of a line *must* be encoded
+                encodeByte(b, !printable.get(b) || isWhitespace(b), buffer);
 
                 // rule #5: soft line break
-                encodeQuotedPrintable(b, buffer);
+                buffer.write(ESCAPE_CHAR);
+                buffer.write(CR);
+                buffer.write(LF);
+                pos = 1;
             }
         }
 
         // rule #3: whitespace at the end of a line *must* be encoded
         // if we would do a soft break line after this octet, encode whitespace
+        int b = getUnsignedOctet(bytes.length - 3, bytes);
+        boolean encode = !printable.get(b) || (isWhitespace(b) && pos > SAFE_LENGTH - 5);
+        pos += encodeByte(b, encode, buffer);
 
         // note #3: '=' *must not* be the ultimate or penultimate character
         // simplification: if < 6 bytes left, do a soft line break as we may need
         //                 exactly 6 bytes space for the last 2 bytes
+        if (pos > SAFE_LENGTH - 2) {
+            buffer.write(ESCAPE_CHAR);
+            buffer.write(CR);
+            buffer.write(LF);
+        }
+        for (int i = bytes.length - 2; i < bytes.length; i++) {
+            b = getUnsignedOctet(i, bytes);
             // rule #3: trailing whitespace shall be encoded
+            encode = !printable.get(b) || (i > bytes.length - 2 && isWhitespace(b));
+            encodeByte(b, encode, buffer);
+        }
 
         return buffer.toByteArray();
     }
