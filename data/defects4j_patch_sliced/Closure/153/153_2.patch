--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -635,15 +636,22 @@ class Normalize implements CompilerPass {
      */
     @Override
     public void onRedeclaration(
-        Scope s, String name, Node n, Node parent, Node gramps,
-        Node nodeWithLineNumber) {
+        Scope s, String name, Node n, CompilerInput input) {
       Preconditions.checkState(n.getType() == Token.NAME);
+      Node parent = n.getParent();
       Var v = s.getVar(name);
 
+      if (v != null && s.isGlobal()) {
         // We allow variables to be duplicate declared if one
         // declaration appears in source and the other in externs.
         // This deals with issues where a browser built-in is declared
         // in one browser but not in another.
+        if (v.isExtern() && !input.isExtern()) {
+          if (hasOkDuplicateDeclaration.add(v)) {
+            return;
+          }
+        }
+      }
 
       // If name is "arguments", Var maybe null.
       if (v != null && v.getParentNode().getType() == Token.CATCH) {
