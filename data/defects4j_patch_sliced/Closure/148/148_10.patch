--- a/src/com/google/javascript/jscomp/SourceMap.java
+++ b/src/com/google/javascript/jscomp/SourceMap.java
@@ -323,32 +342,42 @@ public class SourceMap {
     // Add the mappings themselves.
     out.append("/** Begin mapping definitions. **/\n");
 
-    for (Mapping mapping : mappings) {
-      mapping.appendTo(out);
-      out.append("\n");
-    }
+    (new MappingWriter()).appendMappings(out);
   }
 
   /**
    * Assigns sequential ids to used mappings, and returns the last line mapped.
    */
+  private int prepMappings() throws IOException {
     // Mark any unused mappings.
+    (new MappingTraversal()).traverse(new UsedMappingCheck());
 
     // Renumber used mappings and keep track of the last line.
+    int id = 0;
+    int maxLine = 0;
+    for (Mapping m : mappings) {
+      if (m.used) {
+        m.id = id++;
+        int endPositionLine = m.endPosition.getLineNumber();
+        maxLine = Math.max(maxLine, endPositionLine);
+      }
+    }
 
     // Adjust for the prefix.
+    return maxLine + prefixPosition.getLineNumber();
+  }
 
-  private class LineMapper {
+  private class LineMapper implements MappingVisitor {
     // The destination.
     private final Appendable out;
-    private int line;
-    private int col;
+
     // Whether the current line has had a value written yet.
     private boolean firstChar = true;
 
     private final static String UNMAPPED_STRING = "-1";
 
-    private final static int UNMAPPED = -1;
+    private int lastId = UNMAPPED;
+    private String lastIdString = UNMAPPED_STRING;
 
     LineMapper(Appendable out) {
       this.out = out;
