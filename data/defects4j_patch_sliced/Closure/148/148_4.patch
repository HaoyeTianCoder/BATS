--- a/src/com/google/javascript/jscomp/SourceMap.java
+++ b/src/com/google/javascript/jscomp/SourceMap.java
@@ -82,38 +83,67 @@ public class SourceMap {
     /**
      * Whether the mapping is actually used by the source map.
      */
+    boolean used = false;
+  }
 
+  private class MappingWriter {
     /**
      * Cache of escaped source file name.
      */
+    private String lastSourceFile = null;
+    private String lastSourceFileEscaped = null;
+    private int lastLine = 0;
+    private String lastLineString = String.valueOf(0);
 
     /**
      * Appends the mapping to the given buffer.
      */
-    void appendTo(Appendable out) throws IOException {
+    private void appendMappingTo(
+        Mapping m, Appendable out) throws IOException {
       out.append("[");
 
-      out.append(sourceFile);
+      String sourceFile = m.sourceFile;
       // The source file rarely changes, so cache the escaped string.
+      String escapedSourceFile;
+      if (lastSourceFile != sourceFile) { // yes, s1 != s2, not !s1.equals(s2)
+        lastSourceFile = sourceFile;
+        lastSourceFileEscaped = escapeString(sourceFile);
+      }
+      escapedSourceFile = lastSourceFileEscaped;
 
+      out.append(escapedSourceFile);
       out.append(",");
 
+      int line = m.originalPosition.getLineNumber();
+      if (line != lastLine) {
+        lastLineString = String.valueOf(line);
+      }
+      String lineValue = lastLineString;
 
-      out.append(String.valueOf(originalPosition.getLineNumber()));
+      out.append(lineValue);
 
       out.append(",");
-      out.append(String.valueOf(originalPosition.getCharacterIndex()));
+      out.append(String.valueOf(
+          m.originalPosition.getCharacterIndex()));
 
-      if (originalName != null) {
+      if (m.originalName != null) {
         out.append(",");
-        out.append(originalName);
+        out.append(escapeString(m.originalName));
       }
 
-      out.append("]");
+      out.append("]\n");
     }
+
     /**
      * Add used mappings to the supplied Appendable.
      */
+    void appendMappings(Appendable out) throws IOException {
+      for (Mapping m : mappings) {
+        if (m.used) {
+          appendMappingTo(m, out);
+        }
+      }
+    }
   }
 
   /**
