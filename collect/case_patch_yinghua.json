{
	"#1": "multiple tests to same",
	"Lang_10-org.apache.commons.lang3.time.FastDateFormat_ParserTest::testLANG_831": ["Lang_10_1"],
	"Lang_10-org.apache.commons.lang3.time.FastDateParserTest::testLANG_831": ["Lang_10_1"],

	"#2": "multiple tests to same",
	"Lang_12-org.apache.commons.lang3.RandomStringUtilsTest::testExceptions": ["Lang_12_1"],
	"Lang_12-org.apache.commons.lang3.RandomStringUtilsTest::testLANG805": ["Lang_12_1"],

	"Lang_15-org.apache.commons.lang3.reflect.TypeUtilsTest::testIsAssignable": ["Lang_15_1", "Lang_15_2"],
	"Lang_15-org.apache.commons.lang3.reflect.TypeUtilsTest::testGetTypeArguments": ["Lang_15_2"],

	"Lang_19-org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testOutOfBounds": ["Lang_19_1", "Lang_19_2"],
	"Lang_19-org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest::testUnfinishedEntity": ["Lang_19_1", "Lang_19_2", "Lang_19_3"],

	"Lang_20-org.apache.commons.lang3.StringUtilsTest::testJoin_ArrayChar": ["Lang_20_1"],
	"Lang_20-org.apache.commons.lang3.StringUtilsTest::testJoin_Objectarray": ["Lang_20_2"],

	"#3": "multiple tests to same",
	"Lang_22-org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int": ["Lang_22_1"],
	"Lang_22-org.apache.commons.lang3.math.FractionTest::testReduce": ["Lang_22_1"],

	"#4": "multiple tests to same",
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringCharArrayWithSupplementaryChars": ["Lang_30_1"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars": ["Lang_30_1"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAny_StringStringWithSupplementaryChars": ["Lang_30_1", "Lang_30_2", "Lang_30_3", "Lang_30_4"],
	"#5": "multiple tests to same",
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringCharArrayWithBadSupplementaryChars": ["Lang_30_3"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAny_StringWithBadSupplementaryChars": ["Lang_30_3"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringCharArrayWithSupplementaryChars": ["Lang_30_5"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testIndexOfAnyBut_StringStringWithSupplementaryChars": ["Lang_30_6"],
	"#6": "multiple tests to same",
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithSupplementaryChars": ["Lang_30_7"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithSupplementaryChars": ["Lang_30_7"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_StringWithBadSupplementaryChars": ["Lang_30_7"],
	"Lang_30-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsNone_CharArrayWithBadSupplementaryChars": ["Lang_30_7"],

	"#7": "multiple tests to same",
	"Lang_31-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAnyCharArrayWithSupplementaryChars": ["Lang_31_1"],
	"Lang_31-org.apache.commons.lang3.StringUtilsEqualsIndexOfTest::testContainsAnyStringWithSupplementaryChars": ["Lang_31_1"],

	"#8": "multiple tests to same",
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionHierarchy": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testSelfInstanceTwoVarsReflectionObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionArrayCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionLongArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionArrayArrayCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionFloatArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionDoubleArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionBooleanArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionyteArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionDoubleArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionIntArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionLongArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionhortArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionObjectArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionBooleanArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testSimpleReflectionObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionByteArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionArrayCycleLevel2": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionArrayAndObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionCharArrayArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionShortArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testSelfInstanceVarReflectionObjectCycle": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionIntArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionCharArray": ["Lang_34_1", "Lang_34_2"],
	"Lang_34-org.apache.commons.lang3.builder.ToStringBuilderTest::testReflectionFloatArrayArray": ["Lang_34_1", "Lang_34_2"],

	"Lang_36-org.apache.commons.lang3.math.NumberUtilsTest::testCreateNumber": ["Lang_36_1"],
	"Lang_36-org.apache.commons.lang3.math.NumberUtilsTest::testIsNumber": ["Lang_36_2"],

	"Lang_41-org.apache.commons.lang.ClassUtilsTest::test_getShortClassName_Class": ["Lang_41_1", "Lang_41_2"],
	"Lang_41-org.apache.commons.lang.ClassUtilsTest::test_getPackageName_Class": ["Lang_41_3"],

	"Lang_47-org.apache.commons.lang.text.StrBuilderTest::testLang412Left": ["Lang_47_1"],
	"Lang_47-org.apache.commons.lang.text.StrBuilderTest::testLang412Right": ["Lang_47_2"],

	"Lang_50-org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateInstance": ["Lang_50_1"],
	"Lang_50-org.apache.commons.lang.time.FastDateFormatTest::test_changeDefault_Locale_DateTimeInstance": ["Lang_50_2"],

	"#9": "multiple tests to same",
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testAvailableLocaleSet": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testIsAvailableLocale": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testAvailableLocaleList": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testCountriesByLanguage": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_LocaleLocale": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testLanguagesByCountry": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testToLocale_1Part": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testToLocale_2Part": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testToLocale_3Part": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testLocaleLookupList_Locale": ["Lang_57_1"],
	"Lang_57-org.apache.commons.lang.LocaleUtilsTest::testConstructor": ["Lang_57_1"],

	"#10": "multiple tests to same",
	"Lang_61-org.apache.commons.lang.text.StrBuilderTest::testIndexOfLang294": ["Lang_61_1"],
	"Lang_61-org.apache.commons.lang.text.StrBuilderTest::testLang294": ["Lang_61_1"],

	"#11": "multiple tests to same",
	"Lang_8-org.apache.commons.lang3.time.FastDateFormat_PrinterTest::testCalendarTimezoneRespected": ["Lang_8_3"],
	"Lang_8-org.apache.commons.lang3.time.FastDatePrinterTest::testCalendarTimezoneRespected": ["Lang_8_3"],

	"#12": "multiple tests to same",
	"Lang_9-org.apache.commons.lang3.time.FastDateFormat_ParserTest::testLANG_832": ["Lang_9_1"],
	"Lang_9-org.apache.commons.lang3.time.FastDateParserTest::testLANG_832": ["Lang_9_1"],

	"Math_1-org.apache.commons.math3.fraction.BigFractionTest::testDigitLimitConstructor": ["Math_1_1"],
	"Math_1-org.apache.commons.math3.fraction.FractionTest::testDigitLimitConstructor": ["Math_1_2"],

	"#12": "multiple tests to same",
	"Math_101-org.apache.commons.math.complex.ComplexFormatTest::testForgottenImaginaryCharacter": ["Math_101_1"],
	"Math_101-org.apache.commons.math.complex.FrenchComplexFormatTest::testForgottenImaginaryCharacter": ["Math_101_1"],

	"#13": "multiple tests to same",
	"Math_102-org.apache.commons.math.stat.inference.ChiSquareFactoryTest::testChiSquareLargeTestStatistic": ["Math_102_1"],
	"Math_102-org.apache.commons.math.stat.inference.ChiSquareFactoryTest::testChiSquare": ["Math_102_1"],
	"Math_102-org.apache.commons.math.stat.inference.ChiSquareTestTest::testChiSquareLargeTestStatistic": ["Math_102_1"],
	"Math_102-org.apache.commons.math.stat.inference.ChiSquareTestTest::testChiSquare": ["Math_102_1"],
	"Math_102-org.apache.commons.math.stat.inference.TestUtilsTest::testChiSquareLargeTestStatistic": ["Math_102_1"],
	"Math_102-org.apache.commons.math.stat.inference.TestUtilsTest::testChiSquare": ["Math_102_1"],

	"#14": "multiple tests to same",
	"Math_12-org.apache.commons.math3.distribution.GammaDistributionTest::testDistributionClone": ["Math_12_1"],
	"Math_12-org.apache.commons.math3.distribution.LogNormalDistributionTest::testDistributionClone": ["Math_12_1"],
	"Math_12-org.apache.commons.math3.distribution.NormalDistributionTest::testDistributionClone": ["Math_12_1"],

	"#15": "multiple tests to same",
	"Math_16-org.apache.commons.math3.util.FastMathTest::testMath905LargePositive": ["Math_16_1", "Math_16_2", "Math_16_3"],
	"Math_16-org.apache.commons.math3.util.FastMathTest::testMath905LargeNegative": ["Math_16_1", "Math_16_2", "Math_16_3"],

	"#16": "multiple tests to same",
	"Math_21-org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest::testMath789": ["Math_21_2"],
	"Math_21-org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest::testFullRank": ["Math_21_2"],

	"Math_22-org.apache.commons.math3.distribution.FDistributionTest::testIsSupportLowerBoundInclusive": ["Math_22_1"],
	"Math_22-org.apache.commons.math3.distribution.UniformRealDistributionTest::testIsSupportUpperBoundInclusive": ["Math_22_2"],

	"Math_29-org.apache.commons.math3.linear.SparseRealVectorTest::testEbeDivideMixedTypes": ["Math_29_1"],
	"#17": "multiple tests to same",
	"Math_29-org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplyMixedTypes": ["Math_29_2"],
	"Math_29-org.apache.commons.math3.linear.SparseRealVectorTest::testEbeMultiplySameType": ["Math_29_2"],

	"#18": "multiple tests to same",
	"Math_31-org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718": ["Math_31_1", "Math_31_2", "Math_31_3"],
	"Math_31-org.apache.commons.math3.distribution.FDistributionTest::testMath785": ["Math_31_1", "Math_31_2", "Math_31_3"],

	"#19": "multiple tests to same",
	"Math_35-org.apache.commons.math3.genetics.ElitisticListPopulationTest::testChromosomeListConstructorTooLow": ["Math_35_1"],
	"Math_35-org.apache.commons.math3.genetics.ElitisticListPopulationTest::testChromosomeListConstructorTooHigh": ["Math_35_1"],
	"#20": "multiple tests to same",
	"Math_35-org.apache.commons.math3.genetics.ElitisticListPopulationTest::testConstructorTooHigh": ["Math_35_2"],
	"Math_35-org.apache.commons.math3.genetics.ElitisticListPopulationTest::testConstructorTooLow": ["Math_35_2"],

	"Math_36-org.apache.commons.math.fraction.BigFractionTest::testDoubleValueForLargeNumeratorAndDenominator": ["Math_36_1"],
	"Math_36-org.apache.commons.math.fraction.BigFractionTest::testFloatValueForLargeNumeratorAndDenominator": ["Math_36_2"],

	"#21": "multiple tests to same",
	"Math_37-org.apache.commons.math.complex.ComplexTest::testTan": ["Math_37_1"],
	"Math_37-org.apache.commons.math.complex.ComplexTest::testTanInf": ["Math_37_1"],
	"#22": "multiple tests to same",
	"Math_37-org.apache.commons.math.complex.ComplexTest::testTanh": ["Math_37_2"],
	"Math_37-org.apache.commons.math.complex.ComplexTest::testTanhInf": ["Math_37_2"],

	"Math_4-org.apache.commons.math3.geometry.euclidean.threed.SubLineTest::testIntersectionNotIntersecting": ["Math_4_1"],
	"Math_4-org.apache.commons.math3.geometry.euclidean.twod.SubLineTest::testIntersectionParallel": ["Math_4_2"],

	"#23": "multiple tests to same",
	"Math_43-org.apache.commons.math.stat.descriptive.SummaryStatisticsTest::testOverrideMeanWithMathClass": ["Math_43_1"],
	"Math_43-org.apache.commons.math.stat.descriptive.SummaryStatisticsTest::testOverrideGeoMeanWithMathClass": ["Math_43_1"],
	"Math_43-org.apache.commons.math.stat.descriptive.SummaryStatisticsTest::testOverrideVarianceWithMathClass": ["Math_43_1"],
	"Math_43-org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest::testOverrideMeanWithMathClass": ["Math_43_1"],
	"Math_43-org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest::testOverrideGeoMeanWithMathClass": ["Math_43_1"],
	"Math_43-org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest::testOverrideVarianceWithMathClass": ["Math_43_1"],

	"#24": "multiple tests to same",
	"Math_46-org.apache.commons.math.complex.ComplexTest::testAtanI": ["Math_46_1", "Math_46_2"],
	"Math_46-org.apache.commons.math.complex.ComplexTest::testDivideZero": ["Math_46_1", "Math_46_2"],

	"#25": "multiple tests to same",
	"Math_47-org.apache.commons.math.complex.ComplexTest::testAtanI": ["Math_47_1", "Math_47_2", "Math_47_3", "Math_47_4"],
	"Math_47-org.apache.commons.math.complex.ComplexTest::testDivideZero": ["Math_47_1", "Math_47_2", "Math_47_3", "Math_47_4"],

	"Math_6-org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest::testOverrideVarianceWithMathClass": ["Math_6_1", "Math_6_2", "Math_6_3"],
	"#26": "multiple tests to same",
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest::testTrivial": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testConstrainedRosen": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testElliRotated": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testEllipse": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testTwoAxes": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testCigar": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testRosen": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testRastrigin": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testDiagonalRosen": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testSsDiffPow": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testMaximize": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testAckley": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testCigTab": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testDiffPow": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testSphere": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testTablet": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testCigarWithBoundaries": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest::testSumSinc": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest::testMaximize1": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest::testMaximize2": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest::testMinimize1": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest::testMinimize2": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest::testMaximize1": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest::testMaximize2": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest::testMinimize1": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest::testMinimize2": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_4", "Math_6_5", "Math_6_6", "Math_6_7", "Math_6_8"],
	"#27": "multiple tests to same",
	"Math_6-org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest::testGetIterations": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_9", "Math_6_10", "Math_6_11", "Math_6_12"],
	"Math_6-org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest::testGetIterations": ["Math_6_1", "Math_6_2", "Math_6_3", "Math_6_9", "Math_6_10", "Math_6_11", "Math_6_12"],

	"#27": "multiple tests to same",
	"Math_64-org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson": ["Math_64_1", "Math_64_2", "Math_64_3", "Math_64_4", "Math_64_5", "Math_64_6", "Math_64_7", "Math_64_8", "Math_64_9", "Math_64_10"],
	"Math_64-org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth": ["Math_64_1", "Math_64_2", "Math_64_3", "Math_64_4", "Math_64_5", "Math_64_6", "Math_64_7", "Math_64_8", "Math_64_9", "Math_64_10"],

	"#28": "multiple tests to same",
	"Math_66-org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testQuinticMin": ["Math_66_1", "Math_66_2", "Math_66_3", "Math_66_4", "Math_66_5", "Math_66_6"],
	"Math_66-org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest::testSinMin": ["Math_66_1", "Math_66_2", "Math_66_3", "Math_66_4", "Math_66_5", "Math_66_6"],
	"Math_66-org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testQuinticMinStatistics": ["Math_66_1", "Math_66_2", "Math_66_3", "Math_66_4", "Math_66_5", "Math_66_6"],
	"Math_66-org.apache.commons.math.optimization.univariate.BrentOptimizerTest::testSinMin": ["Math_66_1", "Math_66_2", "Math_66_3", "Math_66_4", "Math_66_5", "Math_66_6"],

	"#29": "multiple tests to same",
	"Math_68-org.apache.commons.math.optimization.general.MinpackTest::testMinpackJennrichSampson": ["Math_68_1", "Math_68_2", "Math_68_3", "Math_68_4", "Math_68_5"],
	"Math_68-org.apache.commons.math.optimization.general.MinpackTest::testMinpackFreudensteinRoth": ["Math_68_1", "Math_68_2", "Math_68_3", "Math_68_4", "Math_68_5"],

	"#30": "multiple tests to same",
	"Math_69-org.apache.commons.math.stat.correlation.PearsonsCorrelationTest::testPValueNearZero": ["Math_69_1"],
	"Math_69-org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest::testPValueNearZero": ["Math_69_1"],

	"Math_71-org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest::testMissedEndEvent": ["Math_71_1"],
	"Math_71-org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest::testMissedEndEvent": ["Math_71_2"],

	"#31": "multiple tests to same",
	"Math_76-org.apache.commons.math.linear.SingularValueSolverTest::testMath320A": ["Math_76_1"],
	"Math_76-org.apache.commons.math.linear.SingularValueSolverTest::testMath320B": ["Math_76_1"],

	"Math_77-org.apache.commons.math.linear.ArrayRealVectorTest::testBasicFunctions": ["Math_77_1"],
	"Math_77-org.apache.commons.math.linear.SparseRealVectorTest::testBasicFunctions": ["Math_77_2"],

	"#32": "multiple tests to same",
	"Math_84-org.apache.commons.math.optimization.direct.MultiDirectionalTest::testMinimizeMaximize": ["Math_84_1", "Math_84_2"],
	"Math_84-org.apache.commons.math.optimization.direct.MultiDirectionalTest::testMath283": ["Math_84_1", "Math_84_2"],

	"#33": "multiple tests to same",
	"Math_86-org.apache.commons.math.linear.CholeskyDecompositionImplTest::testMath274": ["Math_86_1", "Math_86_2"],
	"Math_86-org.apache.commons.math.linear.CholeskyDecompositionImplTest::testNotPositiveDefinite": ["Math_86_1", "Math_86_2"],

	"Math_98-org.apache.commons.math.linear.BigMatrixImplTest::testMath209": ["Math_98_1"],
	"Math_98-org.apache.commons.math.linear.RealMatrixImplTest::testMath209": ["Math_98_2"],

	"Math_99-org.apache.commons.math.util.MathUtilsTest::testGcd": ["Math_99_1"],
	"Math_99-org.apache.commons.math.util.MathUtilsTest::testLcm": ["Math_99_2"],

	"#34": "multiple tests to same",
	"Mockito_1-org.mockito.internal.invocation.InvocationMatcherTest::should_capture_arguments_when_args_count_does_NOT_match": ["Mockito_1_1"],
	"Mockito_1-org.mockito.internal.util.reflection.FieldInitializerTest::can_instantiate_class_with_parameterized_constructor": ["Mockito_1_1"],
	"Mockito_1-org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_report_failure_if_constructor_throws_exception": ["Mockito_1_1"],
	"Mockito_1-org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_fail_if_an_argument_instance_type_do_not_match_wanted_type": ["Mockito_1_1"],
	"Mockito_1-org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_instantiate_type_with_vararg_constructor": ["Mockito_1_1"],
	"Mockito_1-org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest::should_instantiate_type_if_resolver_provide_matching_types": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.ResetTest::shouldRemoveAllStubbing": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyWithNullVarArgArray": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyWithAnyObject": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldStubBooleanVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyBooleanVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldStubCorrectlyWhenMixedVarargsUsed": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldStubStringVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldStubCorrectlyWhenDoubleStringAndMixedVarargsUsed": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyStringVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.basicapi.UsingVarargsTest::shouldVerifyObjectVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest::shouldNotThrowAnyException": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest::shouldVerifyCorrectlyWithAnyVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest::shouldVerifyCorrectlyNumberOfInvocationsUsingAnyVarargAndEqualArgument": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest::shouldStubUsingAnyVarargs": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest::shouldVerifyUsingMatchers": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.stubbing.BasicStubbingTest::test_stub_only_not_verifiable": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.stubbing.BasicStubbingTest::should_evaluate_latest_stubbing_first": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.stubbing.DeprecatedStubbingTest::shouldEvaluateLatestStubbingFirst": ["Mockito_1_1"],
	"Mockito_1-org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest::shouldUseEqualsToVerifyMethodVarargs": ["Mockito_1_1"],

	"#35": "multiple tests to same",
	"Mockito_11-org.mockito.internal.creation.DelegatingMethodTest::equals_should_return_true_when_equal": ["Mockito_11_1"],
	"Mockito_11-org.mockito.internal.creation.DelegatingMethodTest::equals_should_return_true_when_self": ["Mockito_11_1"],

	"#36": "multiple tests to same",
	"Mockito_12-org.mockito.internal.util.reflection.GenericMasterTest::shouldDealWithNestedGenerics": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationBasicTest::shouldUseAnnotatedCaptor": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationBasicTest::shouldUseCaptorInOrdinaryWay": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationBasicTest::shouldCaptureGenericList": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationBasicTest::shouldUseGenericlessAnnotatedCaptor": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationTest::shouldScreamWhenWrongTypeForCaptor": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationTest::testNormalUsage": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationTest::shouldScreamWhenMoreThanOneMockitoAnnotaton": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationTest::shouldScreamWhenInitializingCaptorsForNullClass": ["Mockito_12_1"],
	"Mockito_12-org.mockitousage.annotation.CaptorAnnotationTest::shouldLookForAnnotatedCaptorsInSuperClasses": ["Mockito_12_1"],

	"#37": "multiple tests to same",
	"Mockito_2-org.mockito.internal.util.TimerTest::should_throw_friendly_reminder_exception_when_duration_is_negative": ["Mockito_2_1", "Mockito_2_2", "Mockito_2_3"],
	"Mockito_2-org.mockito.verification.NegativeDurationTest::should_throw_exception_when_duration_is_negative_for_timeout_method": ["Mockito_2_1", "Mockito_2_2", "Mockito_2_3"],
	"Mockito_2-org.mockito.verification.NegativeDurationTest::should_throw_exception_when_duration_is_negative_for_after_method": ["Mockito_2_1", "Mockito_2_2", "Mockito_2_3"],

	"#38": "multiple tests to same",
	"Mockito_20-org.mockitousage.annotation.SpyAnnotationTest::should_spy_inner_class": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.annotation.SpyAnnotationTest::should_report_when_constructor_is_explosive": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::can_spy_abstract_classes": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::exception_message_when_constructor_not_found": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::can_create_mock_with_constructor": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::can_mock_inner_classes": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::mocking_inner_classes_with_wrong_outer_instance": ["Mockito_20_1"],
	"Mockito_20-org.mockitousage.constructor.CreatingMocksWithConstructorTest::can_mock_abstract_classes": ["Mockito_20_1"],

	"#39": "multiple tests to same",
	"Mockito_24-org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest::should_return_zero_if_mock_is_compared_to_itself": ["Mockito_24_1"],
	"Mockito_24-org.mockitousage.bugs.ShouldMocksCompareToBeConsistentWithEqualsTest::should_compare_to_be_consistent_with_equals_when_comparing_the_same_reference": ["Mockito_24_1"],

	"#40": "multiple tests to same",
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::will_return_default_value_on_non_mockable_nested_generic": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_typevar_that_is_referencing_a_typevar_on_class": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::can_create_mock_from_return_types_declared_with_a_bounded_wildcard": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_parameterizedtype_that_is_referencing_a_typevar_on_class": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::generic_deep_mock_frenzy__look_at_these_chained_calls": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],
	"Mockito_25-org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest::can_create_mock_from_multiple_type_variable_bounds_when_method_return_type_is_referencing_a_typevar_on_class": ["Mockito_25_1", "Mockito_25_2", "Mockito_25_3", "Mockito_25_4", "Mockito_25_5"],

	"#41": "multiple tests to same",
	"Mockito_3-org.mockito.internal.invocation.InvocationMatcherTest::should_capture_varargs_as_vararg": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest::shouldVerifyCorrectlyNumberOfInvocationsWithVarargs": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest::shouldMatchAnyVararg": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::should_capture_all_vararg": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::captures_correctly_when_captor_used_multiple_times": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::should_capture_vararg": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::captures_correctly_when_captor_used_on_pure_vararg_method": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper": ["Mockito_3_1", "Mockito_3_2"],
	"Mockito_3-org.mockitousage.matchers.CapturingArgumentsTest::should_capture_byte_vararg_by_creating_captor_with_primitive": ["Mockito_3_1", "Mockito_3_2"],

	"#42": "multiple tests to same",
	"Mockito_33-org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest::shouldStubbingWork": ["Mockito_33_1"],
	"Mockito_33-org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest::shouldVerificationWorks": ["Mockito_33_1"],

	"#43": "multiple tests to same",
	"Mockito_34-org.mockito.internal.invocation.InvocationMatcherTest::shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch": ["Mockito_34_1"],
	"Mockito_34-org.mockitousage.basicapi.UsingVarargsTest::shouldMatchEasilyEmptyVararg": ["Mockito_34_1"],

	"#44": "multiple tests to same",
	"Mockito_35-org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntPassed": ["Mockito_35_1"],
	"Mockito_35-org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassed": ["Mockito_35_1"],
	"Mockito_35-org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassedToEq": ["Mockito_35_2"],
	"Mockito_35-org.mockitousage.bugs.NPEWithCertainMatchersTest::shouldNotThrowNPEWhenIntegerPassedToSame": ["Mockito_35_3"],

	"#45": "multiple tests to same",
	"Mockito_36-org.mockito.internal.invocation.InvocationTest::shouldScreamWhenCallingRealMethodOnInterface": ["Mockito_36_1", "Mockito_36_2"],
	"Mockito_36-org.mockitousage.spies.SpyingOnInterfacesTest::shouldFailInRuntimeWhenCallingRealMethodOnInterface": ["Mockito_36_1", "Mockito_36_2"],

	"#46": "multiple tests to same",
	"Mockito_37-org.mockito.internal.stubbing.answers.AnswersValidatorTest::shouldFailWhenCallingRealMethodOnIterface": ["Mockito_37_1"],
	"Mockito_37-org.mockitousage.spies.SpyingOnInterfacesTest::shouldFailFastWhenCallingRealMethodOnInterface": ["Mockito_37_1"],

	"#47": "multiple tests to same",
	"Mockito_38-org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest::shouldWorkFineWhenGivenArgIsNull": ["Mockito_38_1"],
	"Mockito_38-org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest::shouldAllowPassingNullArgument": ["Mockito_38_1"],

	"#48": "multiple tests to same",
	"Mockito_6-org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.AnyXMatchersAcceptNullsTest::shouldNotAcceptNullInAnyXMatchers": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.MatchersTest::anyStringMatcher": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyCollection": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyList": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.NewMatchersTest::shouldAllowAnyMap": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],
	"Mockito_6-org.mockitousage.matchers.NewMatchersTest::shouldAllowAnySet": ["Mockito_6_1","Mockito_6_2", "Mockito_6_3","Mockito_6_4", "Mockito_6_5","Mockito_6_6", "Mockito_6_7","Mockito_6_8", "Mockito_6_9","Mockito_6_10", "Mockito_6_11","Mockito_6_12", "Mockito_6_13","Mockito_6_14", "Mockito_6_15","Mockito_6_16", "Mockito_6_17","Mockito_6_18", "Mockito_6_19","Mockito_6_20"],

	"#49": "multiple tests to same",
	"Mockito_4-org.mockito.exceptions.ReporterTest::can_use_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted": ["Mockito_4_1"],
	"Mockito_4-org.mockitousage.bugs.ClassCastExOnVerifyZeroInteractionsTest::should_not_throw_a_ClassCastException": ["Mockito_4_1"],
	"Mockito_4-org.mockito.exceptions.ReporterTest::can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted_in_order": ["Mockito_4_2"],
	"Mockito_4-org.mockito.exceptions.ReporterTest::can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_injection_failure": ["Mockito_4_3"],

	"#50": "multiple tests to same",
	"Mockito_9-org.mockitousage.constructor.CreatingMocksWithConstructorTest::abstractMethodStubbed": ["Mockito_9_1", "Mockito_9_2"],
	"Mockito_9-org.mockitousage.constructor.CreatingMocksWithConstructorTest::testCallsRealInterfaceMethod": ["Mockito_9_1", "Mockito_9_2"],
	"Mockito_9-org.mockitousage.constructor.CreatingMocksWithConstructorTest::abstractMethodReturnsDefault": ["Mockito_9_1", "Mockito_9_2"],

	"#50": "multiple tests to same",
	"Mockito_26-org.mockito.internal.progress.HandyReturnValuesTest::should_default_values_for_primitive": ["Mockito_26_1"],
	"Mockito_26-org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest::should_return_primitive": ["Mockito_26_1"],
	"Mockito_26-org.mockito.internal.stubbing.defaultanswers.ReturnsMocksTest::should_return_the_usual_default_values_for_primitives": ["Mockito_26_1"],
	"Mockito_26-org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest::should_return_the_usual_default_values_for_primitives": ["Mockito_26_1"],

	"#51": "multiple tests to same",
	"Time_10-org.joda.time.TestDays::testFactory_daysBetween_RPartial_MonthDay": ["Time_10_1", "Time_10_2"],
	"Time_10-org.joda.time.TestMonths::testFactory_monthsBetween_RPartial_MonthDay": ["Time_10_1", "Time_10_2"],

	"#52": "multiple tests to same",
	"Time_12-org.joda.time.TestLocalDate_Constructors::testFactory_fromDateFields_beforeYearZero1": ["Time_12_1", "Time_12_2"],
	"Time_12-org.joda.time.TestLocalDate_Constructors::testFactory_fromDateFields_beforeYearZero3": ["Time_12_1", "Time_12_2"],
	"Time_12-org.joda.time.TestLocalDate_Constructors::testFactory_fromCalendarFields_beforeYearZero1": ["Time_12_1", "Time_12_2"],
	"Time_12-org.joda.time.TestLocalDate_Constructors::testFactory_fromCalendarFields_beforeYearZero3": ["Time_12_1", "Time_12_2"],
	"#52": "multiple tests to same",
	"Time_12-org.joda.time.TestLocalDateTime_Constructors::testFactory_fromDateFields_beforeYearZero1": ["Time_12_3", "Time_12_4"],
	"Time_12-org.joda.time.TestLocalDateTime_Constructors::testFactory_fromDateFields_beforeYearZero3": ["Time_12_3", "Time_12_4"],
	"Time_12-org.joda.time.TestLocalDateTime_Constructors::testFactory_fromCalendarFields_beforeYearZero1": ["Time_12_3", "Time_12_4"],
	"Time_12-org.joda.time.TestLocalDateTime_Constructors::testFactory_fromCalendarFields_beforeYearZero3": ["Time_12_3", "Time_12_4"],

	"#53": "multiple tests to same",
	"Time_14-org.joda.time.TestMonthDay_Basics::testPlusMonths_int_negativeFromLeap": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testMinusDays_int_negativeFromLeap": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testPlusMonths_int_fromLeap": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testPlusMonths_int_negativeEndOfMonthAdjust": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testMinusMonths_int_endOfMonthAdjust": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testMinusMonths_int_negativeFromLeap": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testMinusMonths_int_fromLeap": ["Time_14_1"],
	"Time_14-org.joda.time.TestMonthDay_Basics::testPlusDays_int_fromLeap": ["Time_14_1"],

	"#54": "multiple tests to same",
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly_baseStartYear": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly_parseStartYear": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly_baseEndYear": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_withDefaultYear_feb29": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29": ["Time_16_1"],
	"Time_16-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly_parseEndYear": ["Time_16_1"],

	"#55": "multiple tests to same",
	"Time_22-org.joda.time.TestDuration_Basics::testToPeriod_fixedZone": ["Time_22_1"],
	"Time_22-org.joda.time.TestPeriod_Constructors::testConstructor_long_fixedZone": ["Time_22_1"],

	"#56": "multiple tests to same",
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_weekyear_month_week_2010": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_weekyear_month_week_2011": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_weekyear_month_week_2012": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_year_month_week_2010": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_year_month_week_2011": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_year_month_week_2012": ["Time_24_1"],
	"Time_24-org.joda.time.format.TestDateTimeFormatter::testParseLocalDate_year_month_week_2016": ["Time_24_1"],

	"#57": "multiple tests to same",
	"Time_25-org.joda.time.TestDateTimeZoneCutover::test_DateTime_constructor_Moscow_Autumn": ["Time_25_1"],
	"Time_25-org.joda.time.TestDateTimeZoneCutover::test_getOffsetFromLocal_Moscow_Autumn_overlap_mins": ["Time_25_1"],
	"Time_25-org.joda.time.TestDateTimeZoneCutover::test_getOffsetFromLocal_Moscow_Autumn": ["Time_25_1"],

	"#58": "multiple tests to same",
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithSecondOfMinuteInDstChange": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithMinuteOfHourInDstChange_mockZone": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testBug2182444_usCentral": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithMillisOfSecondInDstChange_Paris_summer": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithHourOfDayInDstChange": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testWithMillisOfSecondInDstChange_NewYork_winter": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],
	"Time_26-org.joda.time.TestDateTimeZoneCutover::testBug2182444_ausNSW": ["Time_26_1", "Time_26_2", "Time_26_3", "Time_26_4", "Time_26_5", "Time_26_6", "Time_26_7", "Time_26_8"],

	"#59": "multiple tests to same",
	"Time_3-org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero": ["Time_3_1", "Time_3_2", "Time_3_3", "Time_3_4", "Time_3_5", "Time_3_6", "Time_3_7", "Time_3_8", "Time_3_9", "Time_3_10"],
	"Time_3-org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero": ["Time_3_1", "Time_3_2", "Time_3_3", "Time_3_4", "Time_3_5", "Time_3_6", "Time_3_7", "Time_3_8", "Time_3_9", "Time_3_10"],
	"Time_3-org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero": ["Time_3_1", "Time_3_2", "Time_3_3", "Time_3_4", "Time_3_5", "Time_3_6", "Time_3_7", "Time_3_8", "Time_3_9", "Time_3_10"],
	"Time_3-org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero": ["Time_3_1", "Time_3_2", "Time_3_3", "Time_3_4", "Time_3_5", "Time_3_6", "Time_3_7", "Time_3_8", "Time_3_9", "Time_3_10"],
	"Time_3-org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero": ["Time_3_1", "Time_3_2", "Time_3_3", "Time_3_4", "Time_3_5", "Time_3_6", "Time_3_7", "Time_3_8", "Time_3_9", "Time_3_10"],

	"#60": "multiple tests to same",
	"Time_5-org.joda.time.TestPeriod_Basics::testNormalizedStandard_periodType_months1": ["Time_5_1"],
	"Time_5-org.joda.time.TestPeriod_Basics::testNormalizedStandard_periodType_months2": ["Time_5_1"],
	"Time_5-org.joda.time.TestPeriod_Basics::testNormalizedStandard_periodType_monthsWeeks": ["Time_5_1"],

	"Time_6-org.joda.time.chrono.TestGJDate::test_cutoverPreZero": ["Time_6_1"],
	"#61": "multiple tests to same",
	"Time_6-org.joda.time.chrono.TestGJDate::test_plusWeekyears_positiveToNegative_crossCutover": ["Time_6_2"],
	"Time_6-org.joda.time.chrono.TestGJDate::test_plusYears_positiveToZero_crossCutover": ["Time_6_2"],
	"Time_6-org.joda.time.chrono.TestGJDate::test_plusYears_positiveToNegative_crossCutover": ["Time_6_2"],
	"Time_6-org.joda.time.chrono.TestGJDate::test_plusWeekyears_positiveToZero_crossCutover": ["Time_6_2"],

	"#62": "multiple tests to same",
	"Time_7-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear": ["Time_7_1"],
	"Time_7-org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear": ["Time_7_1"]
}